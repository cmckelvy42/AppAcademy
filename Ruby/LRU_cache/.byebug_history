q
y
@store.last.valq
n
@store.last.val
@store.include?(key)
n
@store.include?(key)
@store
key
c
self[key]
q
self.first
self.include?(:first)
self[:first]
self.first
self[:first]
seltf[:first]
self
key
q
last
quit
last
tmp
tmp.next
s
quit
n
@head.next
@head
tmp.next
tmp.next = last
tmp.next
tmp
@head
@head.next
self.empty?
empty?
last
tmp.next
tmp == @head
@head.next
n
tmp == @head
tmp
q
@num_buckets
bucket
n
q
@store.flatten
@store.flatten.reject{|e| e.nil?}
@store
resize!
@store
insert(30)
30 % @num_buckets
@store
@store[30]
num % @num_buckets
@store.size
@num_buckets
num
c
quit
@count
c
@count
c
n
tmp.include?(4)
tmp.include?(3)
n
include?(num)
n
c
self.include?(num)
self.incllude?(num)
@store[4]
@store
